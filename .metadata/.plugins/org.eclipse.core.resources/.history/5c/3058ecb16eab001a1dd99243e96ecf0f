import java.io.*;
import java.util.*;
public class maxcross {
	public static int check(List<Point> points) {
		return -1;
	}
	static int[] ps;
	public static void main(String[] args) throws IOException{
		// IO
		//                                    new FileReader("reduce.in")
		BufferedReader f = new BufferedReader(new InputStreamReader(System.in));
		//                               new BufferedWriter(new FileWriter("reduce.out"))
		PrintWriter pw = new PrintWriter(new OutputStreamWriter(System.out));
		StringTokenizer st = new StringTokenizer(f.readLine());
		int N = Integer.parseInt(st.nextToken());
		int K = Integer.parseInt(st.nextToken());
		int B = Integer.parseInt(st.nextToken());
		List<Integer> broken = new ArrayList<Integer>();
		boolean[] crosswalks = new boolean[N];
		int best;
		int needfixes = 0;
		ps = new int[N];
		int[] input = new int[N];
		for(int i = 0; i < B; i ++) {
			input[i] = Integer.parseInt(st.nextToken());
		}
		Arrays.sort(input);
	}
}